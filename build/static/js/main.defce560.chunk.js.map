{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","assets/images/BANNER.jpg","assets/images/1.png","assets/images/mintImage.jpg","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","name","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","ResponsiveWrapper","img","App","useDispatch","useSelector","React","useState","selectedAmount","setSelectedAmount","feedback","setFeedback","claimingNft","setClaimingNft","getData","useEffect","style","backgroundColor","padding","className","src","banner","textAlign","fontSize","fontWeight","Number","target","href","onClick","e","preventDefault","window","ethereum","metamaskIsInstalled","isMetaMask","request","method","Web3EthContract","setProvider","Web3","accounts","SmartContractObj","SmartContract","on","location","reload","FormControl","fullWidth","InputLabel","id","Select","labelId","value","label","onChange","event","MenuItem","disabled","_amount","mint","send","to","from","utils","toWei","toString","once","err","then","receipt","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.defce560.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  name: \"\",\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        name: action.payload.name,\n        totalSupply: action.payload.totalSupply,\n        cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = await store\n        .getState()\n        .blockchain.smartContract.methods.name()\n        .call();\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let cost = await store\n        .getState()\n        .blockchain.smartContract.methods.cost()\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          name,\n          totalSupply,\n          cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport SmartContract from \"../../contracts/TBCNFTABI.json\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n  });\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        // const NetworkData = await SmartContract.networks[networkId];\n        if (networkId == 1) {\n          const SmartContractObj = new Web3EthContract(\n            SmartContract,\n            \"0x68cf439BA5D2897524091Ef81Cb0A3D1F56E5500\"\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Ethereum\"));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--black);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--white);\n  font-size: 30px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--white);\n  font-size: 14px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--white);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/BANNER.03a52c01.jpg\";","export default __webpack_public_path__ + \"static/media/1.75f03515.png\";","export default __webpack_public_path__ + \"static/media/mintImage.ba6cfdc8.jpg\";","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nimport i1 from \"./assets/images/1.png\";\nimport mintImage from \"./assets/images/mintImage.jpg\";\nimport banner from \"./assets/images/BANNER.jpg\"; //change\nimport './AppStyles.css'\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: #ffffff;\n  padding: 10px;\n  font-weight: bold;\n  color: #000000;\n  width: 300px;\n  cursor: pointer;\n  box-shadow: 2px 8px 4px -2px rgba(250, 250, 0, 0.5);\n  -webkit-box-shadow: 2px 3px 10px -2px rgba(250, 250, 0, 0.5);\n  -moz-box-shadow: 2px 8px 4px -2px rgba(250, 250, 0, 0.5);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  :hover {\n    -webkit-box-shadow: 2px 3px 40px -2px rgba(250, 250, 0, 0.9);\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: column;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  width: 200px;\n  height: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n    height: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n\n  const [selectedAmount, setSelectedAmount] = React.useState(1);\n\n  const handleChange = (event) => {\n    setSelectedAmount(event.target.value);\n  };\n\n  const data = useSelector((state) => state.data);\n  const [feedback, setFeedback] = useState(\"What Personality will your Bitbot have?\");\n  const [claimingNft, setClaimingNft] = useState(false);\n\n  const claimNFTs = (_amount) => {\n    if (_amount <= 0) {\n      return;\n    }\n    setFeedback(\"Preparing your BitBot NFT...\");\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(blockchain.account, _amount)\n      .send({\n        //gasLimit: \"285000\",\n        to: \"0x68cf439BA5D2897524091Ef81Cb0A3D1F56E5500\", //change\n        from: blockchain.account,\n        value: blockchain.web3.utils.toWei((.015 * _amount).toString(), \"ether\"),\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"It seems the transaction was cancelled.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        setFeedback(\n          \"Woohoo! You just received your BitBot! Visit Opensea.io to view your randomly generated NFT!\"\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen style={{ backgroundColor: \"var(--black)\" }}>\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 12 }}>\n        <div className='header-text'> Mint a Bitbot Society!\n        </div>\n        \n        <s.SpacerMedium />\n        <img className=\"banner-img\" src={banner} />\n        <ResponsiveWrapper flex={1} style={{ padding: 12 }}>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n          \n          <div className=\"p-text\"> \n          We lowered gas for everyone so we can all\n           beep boop into the metaverse! #BeepboopBitbot\n          </div>\n            \n            <s.TextTitle\n              style={{ textAlign: \"center\", fontSize: 26, fontWeight: \"bold\" }}\n            >\n              {data.totalSupply}/9999\n            </s.TextTitle>\n          </s.Container>\n          <s.SpacerMedium />\n          <s.Container\n            flex={1}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{ backgroundColor: \"#000000\", padding: 12 }}\n          >\n            {Number(data.totalSupply) == 10000 ? (\n              <>\n                <s.TextTitle style={{ textAlign: \"center\" }}>\n                  The sale has ended.\n                </s.TextTitle>\n                <s.SpacerSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                  You can still buy and trade BitBot NFTs on{\" \"}\n                  <a\n                    target={\"\"}\n                    href={\"https://opensea.io/collection/the-bee-collaborative\"}\n                  >\n                    Opensea.io\n                  </a>\n                </s.TextDescription>\n              </>\n            ) : (\n              <>\n                <s.TextTitle style={{ textAlign: \"center\" }}>\n                  1 BitBot NFT costs .015 ETH\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                  -excluding gas fee-\n                </s.TextDescription>\n                <s.SpacerLarge />\n                <s.SpacerSmall />\n                <s.TextDescription style={{ textAlign: \"center\" }}>\n                  {feedback}\n                </s.TextDescription>\n                <s.SpacerMedium />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription style={{ textAlign: \"center\" }}>\n                    \n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >CONNECT WALLET\n                    </StyledButton>\n                    {blockchain.errorMsg !== '' ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription style={{ textAlign: 'center' }}>\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                 <>\n                  <div className=\"mui-select\">\n                    <FormControl fullWidth>\n                      <InputLabel id=\"demo-simple-select-label\">Amount</InputLabel>\n                      <Select \n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={selectedAmount}\n                        label=\"Amount\"\n                        onChange={handleChange}\n                      >\n                        <MenuItem value={1}>1</MenuItem>\n                        <MenuItem value={2}>2</MenuItem>\n                        <MenuItem value={3}>3</MenuItem>\n                        <MenuItem value={4}>4</MenuItem>\n                        <MenuItem value={5}>5</MenuItem>\n                        <MenuItem value={6}>6</MenuItem>\n                        <MenuItem value={7}>7</MenuItem>\n                        <MenuItem value={8}>8</MenuItem>\n                        <MenuItem value={9}>9</MenuItem>\n                        <MenuItem value={10}>10</MenuItem>\n                        <MenuItem value={11}>11</MenuItem>\n                        <MenuItem value={12}>12</MenuItem>\n                        <MenuItem value={13}>13</MenuItem>\n                      </Select>\n                    </FormControl>\n                    </div>\n                  <s.Container ai={'center'} jc={'center'} fd={'row'}>\n                    <StyledButton\n                      disabled={claimingNft ? 1 : 0}\n                      onClick={(e) => {\n                        e.preventDefault()\n                        claimNFTs(selectedAmount)\n                        getData()\n                      }}\n                    >\n                      {claimingNft ? 'Busy...' : `Buy ${selectedAmount} NFT`}\n                    </StyledButton>\n                  </s.Container>\n                    \n                    </>\n                )}\n              </>\n            )}\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerSmall />\n        <s.Container jc={'center'} ai={'center'} style={{ width: '70%' }}>\n          <s.TextDescription style={{ textAlign: 'center', fontSize: 18 }}>\n          We are securing space and building in the Metaverse for your Bots to beep boop! \n          Bots don’t use roadmaps, they are programmed with GPS to beep boop\n           directly to the Metaverse!\n\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription style={{ textAlign: 'center', fontSize: 14 }}>\n            BitBot Rewarded #BitBotSociety <p />\n            *.*.*Launching Soon.*.*\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport \"./styles/theme.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}