{"version":3,"sources":["images/logo.png","components/Navbar.js","images/star2.jpeg","components/Modal.js","lib/wallet.js","lib/eth-session.js","components/MintHome.js","images/welcomeGif.gif","components/Welcome.js","images/bitbotRap.mp4","components/About.js","images/1.png","images/2.png","images/3.png","images/4.png","images/5.png","images/6.png","images/7.png","images/8.png","components/Display.js","images/CHRIS.png","images/JAY.png","components/Team.js","components/Info.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","state","isOpen","handleToggle","setState","className","this","id","smooth","to","src","logo","alt","pathname","target","icon","faTwitter","faDiscord","onClick","faTimes","faBars","Component","Modal","children","shown","close","message","e","stopPropagation","style","backgroundImage","pattern","Wallet","accounts","chain","EthereumSession","args","contractAddress","contractABI","isWeb3Connected","lastError","provider","wallet","ethersProvider","web3client","debug","a","window","ethereum","request","method","params","hex","rpcURL","deep","ethers","require","providers","Web3Provider","warn","contract","Contract","isConnected","connectChain","connectAccounts","Web3","err","subscribe","eth","hasAccounts","getWalletAccounts","requestWalletAccounts","isChainConnected","getWalletChainID","chainID","getChain","setChainID","addChain","isWalletAllowed","JSON","stringify","decimal","permissions","some","p","parentCapability","length","code","alert","hexChainID","chainId","on","arg1","Array","prototype","slice","call","arguments","console","log","error","info","severity","logs","document","getElementById","hr","createElement","appendChild","i","json","createTextNode","_","COMMON_CHAINS","parseInt","name","IOS_PLATFORMS","config","process","INFURA_API_MAINNET_KEY","ContractAbi","CONNECTORS","MintHome","context","useWeb3React","useState","walletAddress","setWalletAddress","signedIn","contractWithSigner","setContractWithSigner","tokenPrice","setTokenPrice","howManyTokens","setHowManyTokens","setTotalSupply","paused","setPaused","modalShown","toggleModal","errorMessage","setErrorMessage","ethereumSession","useMemo","CHAIN_ID","CONTRACT","ABI","connectProvider","connector","activate","redirect","link","location","href","substr","Walletlink","WalletConnect","curChain","connectEthers","reload","loadContractData","signer","getSigner","connect","totalSupply","totalSupplyInit","cost","toNumber","price","String","overrides","from","value","estimateGas","mint","gasBN","finalGasBN","mul","BigNumber","div","gasLimit","toString","txn","wait","setMintingSuccess","setMintingError","useEffect","then","catch","paraText","buttonText","type","min","max","onChange","newNumber","WalletLinkConnector","url","RPC_URL","appLogoUrl","appName","WalletConnectConnector","supportedChainIds","rpc","Welcome","rel","welcomeGif","About","controls","rap","Display","b","c","d","f","Team","chris","jay","Info","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getLibrary","library","pollingInterval"],"mappings":"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","file":"static/js/main.28931da2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.660f370c.png\";","import React, { Component } from 'react'; \nimport { HashLink } from \"react-router-hash-link\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDiscord, faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport { faTimes, faBars } from '@fortawesome/free-solid-svg-icons'\nimport logo from '../images/logo.png'\n\nimport \"./Navbar.css\";\n\nexport default class Navbar extends Component { \n  state = {\n    isOpen: false\n  };\n\n  handleToggle = () => { \n    this.setState({ isOpen: !this.state.isOpen })\n  };\n\n  render () {\n    return (\n      <nav className={this.state.isOpen ? \"navbar active\" : \"navbar\"} id=\"#fullhome\">\n        <div className=\"nav-container\">\n          <HashLink smooth to=\"#fullhome\" className=\"nav-logo\">\n            <img className=\"nav__imgLogo\" src={logo} alt=\"GATB Logo\"/>\n          </HashLink>\n\n          <ul className={this.state.isOpen ? \"nav-menu active\" : \"nav-menu\"}>\n            <li className=\"nav-item\">\n              <HashLink\n                smooth\n                to=\"#project\"\n                className=\"nav-links\"\n              >\n                ABOUT\n              </HashLink>\n            </li>\n            <li className=\"nav-item\">\n              <HashLink\n                smooth\n                to=\"#roadmap\"\n                className=\"nav-links\"\n              >\n                VISION\n              </HashLink>\n            </li>\n            <li className=\"nav-item\">\n              <HashLink\n                smooth \n                to=\"#team\"\n                className=\"nav-links\"\n              >\n                FOUNDERS\n              </HashLink>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-links\" to={{ pathname: \"https://twitter.com/BitBotSociety\" }} target=\"_blank\" >\n                <FontAwesomeIcon icon={faTwitter} />\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-links\" to={{ pathname: \"https://discord.com/invite/kG24rk4cMD\" }} target=\"_blank\" >\n                <FontAwesomeIcon icon={faDiscord} />\n              </Link>\n            </li>\n          </ul>\n          <div className=\"nav-icon\" onClick={this.handleToggle}>\n            {this.state.isOpen ? <FontAwesomeIcon icon={faTimes} />\n              : <FontAwesomeIcon icon={faBars} />\n            }\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}","export default __webpack_public_path__ + \"static/media/star2.0e1230f7.jpeg\";","import React, {useEffect, useRef} from 'react'; \nimport './Modal.css';\nimport pattern from '../images/star2.jpeg';\n\nexport default function Modal({ children, shown, close, message }) {\n    return shown ? (\n      <div className=\"modal-backdrop\" onClick={() => { close(); }}>\n        <div className=\"modal-content\" onClick={e => { e.stopPropagation(); }} style={{ backgroundImage: `url(${pattern})` }} >\n          <div className=\"modal__text\">\n            <div>\n              {message} \n            </div>\n          </div>\n          <button onClick={close}>OK</button>\n        </div>\n      </div>\n    ) : null;\n  }\n","\nclass Wallet{\n  accounts = [];\n  chain    = null;\n\n  constructor(){\n    this.accounts = [];\n    this.chain = null;\n  }\n}\n\nexport default Wallet;\n","\nimport Wallet from './wallet.js';\n\nclass EthereumSession{\n  chain           = null;\n  contractAddress = null;\n  contractABI     = null;\n  isWeb3Connected = false;\n  lastError       = null;\n  provider        = null;\n  wallet          = null;\n\n  ethersProvider  = null;\n  web3client      = null;\n\n  constructor( args ){\n    this.chain = args.chain;\n    this.contractAddress = args.contractAddress;\n    this.contractABI = args.contractABI;\n    this.wallet = new Wallet();\n    \n    if( args.provider ){\n      this.provider = args.provider;\n    }\n\n    this.debug( \"EthereumSession.constructor()\" );\n  }\n\n  async addChain( chain ){\n    try{\n      this.lastError = null;\n      await window.ethereum.request({ method: 'wallet_addEthereumChain', params: [{ 'chainId': chain.hex, 'rpcUrls': chain.rpcURL }] });\n      return true;\n    }\n    catch( err ){\n      this.lastError = err;\n      return false;\n    }\n  }\n\n  async connectEthers( deep ){\n    let ethers;\n    try{\n      ethers = require( 'ethers' );\n    }\n    catch( err ){\n      return false;\n    }\n\n    let subscribe = false;\n    if( window.ethereum && !this.ethersProvider ){\n      subscribe = true;\n      this.ethersProvider = new ethers.providers.Web3Provider( window.ethereum, 'any' );\n      this.debug( 'using browser' );\n    }\n\n    if( !this.ethersProvider && this.provider ){\n      subscribe = true;\n      this.ethersProvider = new ethers.providers.Web3Provider( this.provider, 'any' );\n      this.debug( 'using NETWORK override' );\n    }\n\n    if( !this.ethersProvider ){\n      this.warn( 'No web3 provider' );\n      return false;\n    }\n\n    if( !this.contract ){\n      //const signer = this.ethersProvider.getSigner();\n      this.contract = new ethers.Contract( this.contractAddress, this.contractABI, this.ethersProvider );\n    }\n\n    if( window.ethereum.isConnected() ){\n      //if( subscribe )\n      //  this.subscribe();\n    }\n    else{\n      return false;\n    }\n\n\n    if( !(await this.connectChain( deep )) )\n      return false;\n\n    if( !(await this.connectAccounts( deep )) )\n      return false;\n\n    return true;\n  }\n\n  async connectWeb3( deep ){\n    let Web3 = null;\n    try{\n      Web3 = require( 'web3' );\n    }\n    catch( err ){\n      debugger\n    }\n\n    let subscribe = false;\n    if( window.ethereum && !this.web3client ){\n      subscribe = true;\n      this.web3client = new Web3( window.ethereum );\n      this.debug( 'using browser' );\n    }\n\n    if( !this.web3client && this.provider ){\n      subscribe = true;\n      this.web3client = new Web3( this.provider );\n      this.debug( 'using NETWORK override' );\n    }\n\n    if( !this.web3client ){\n      this.warn( 'No web3 provider' );\n      return false;\n    }\n\n\n    if( !this.contract )\n      this.contract = new this.web3client.eth.Contract( this.contractABI, this.contractAddress );\n\n    if( window.ethereum.isConnected() ){\n      if( subscribe )\n        this.subscribe();\n    }\n    else{\n      return false;\n    }\n\n\n    if( !(await this.connectChain( deep )) )\n      return false;\n\n    if( !(await this.connectAccounts( deep )) )\n      return false;\n\n    return true;\n  }\n\n  async connectAccounts( deep ){\n    if( this.hasAccounts() )\n      return true;\n\n    this.wallet.accounts = await this.getWalletAccounts();\n    if( this.hasAccounts() )\n      return true;\n\n    if( deep ){\n      this.wallet.accounts = await this.requestWalletAccounts();\n      return this.hasAccounts();\n    }\n\n    return false;\n  }\n\n  async connectChain( deep ){\n    if( this.isChainConnected() )\n      return true;\n\n    const chainID = await this.getWalletChainID();\n    this.wallet.chain = EthereumSession.getChain( chainID );\n    if( this.isChainConnected() )\n      return true;\n\n    if( deep ){\n      if( await this.setChainID( this.chain.hex ) ){\n        const chainID = await this.getWalletChainID();\n        this.wallet.chain = EthereumSession.getChain( chainID );\n        return this.isChainConnected();\n      }\n\n      if( await this.addChain( this.chain ) ){\n        const chainID = await this.getWalletChainID();\n        this.wallet.chain = EthereumSession.getChain( chainID );\n        if( this.isChainConnected() )\n          return true;\n\n        if( await this.setChainID( this.chain.hex ) ){\n          const chainID = await this.getWalletChainID();\n          this.wallet.chain = EthereumSession.getChain( chainID );\n          return this.isChainConnected();\n        }\n      }\n    }\n\n    return false;\n  }\n\n  static getChain( chainID ){\n    if( chainID in EthereumSession.COMMON_CHAINS )\n      return EthereumSession.COMMON_CHAINS[ chainID ];\n\n    if( typeof chainID === 'string' ){\n      chainID = parseInt( chainID );\n      if( chainID in EthereumSession.COMMON_CHAINS )\n        return EthereumSession.COMMON_CHAINS[ chainID ];\n    }\n\n    return null;\n  }\n\n  async getWalletAccounts(){\n    const isAllowed = await this.isWalletAllowed();\n    if( isAllowed !== false ){\n      try{\n        const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n        return accounts;\n      }\n      catch( err ){\n        this.warn({ 'getWalletAccounts': JSON.stringify( err ) });\n        return [];\n      }\n    }\n    else{\n      return [];\n    }\n  }\n\n  async getWalletChainID(){\n    try{\n      const chainID = await window.ethereum.request({ method: 'eth_chainId' });\n      return chainID;\n    }\n    catch( err ){\n      this.warn({ 'getWalletChainID': JSON.stringify( err ) });\n      return null;\n    }\n  }\n\n  isChainConnected(){\n    if( this.wallet.chain )\n      return this.wallet.chain.decimal === this.chain.decimal;\n    else\n      return false;\n  }\n\n  async isConnected(){\n    if( !window.ethereum.isConnected() )\n      return false;\n\n    if( !this.isChainConnected() )\n      return false;\n\n    if( !(await this.hasAccounts()) )\n      return false;\n    \n    return true;\n  }\n\n  async isWalletAllowed(){\n    try{\n      const permissions = await window.ethereum.request({ method: 'wallet_getPermissions' })\n      return permissions.some( p => p.parentCapability === 'eth_accounts' )\n    }\n    catch( err ){\n      this.warn({ 'isWalletAllowed': JSON.stringify( err ) });\n      return null;\n    }\n  }\n\n  hasAccounts(){\n    return !!(this.wallet.accounts && this.wallet.accounts.length)\n  }\n\n  //unlock\n  async requestWalletAccounts(){\n    try{\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' })\n      return accounts\n    }\n    catch( err ){\n      if( err.code === -32002 ){\n        alert( `Help!  Unlock your wallet and try again.` );\n      }\n      else if( err.code === 4001 ){\n        alert( `Oops!  No account(s) selected, try again.` );\n      }\n      else{\n        this.warn({ 'requestWalletAccounts': err });\n        alert( `Oops!  Unknown wallet error, check your wallet and try again.` );\n      }\n      return []\n    }\n  }\n\n  async setChainID( hexChainID ){\n    try{\n      this.lastError = null;\n      await window.ethereum.request({ method: 'wallet_switchEthereumChain', params: [{ chainId: hexChainID }] });\n      return true;\n    }\n    catch( err ){\n      this.lastError = err;\n      if( err.code === 4001 ){\n        //user rejected selection\n      }\n      else if( err.code === 4902 ){\n        //add failed\n      }\n\n      return false;\n    }\n  }\n\n  subscribe(){\n    if( window.ethereum ){\n      /*\n      window.ethereum.on('connect', connectInfo => {\n        this.isWeb3Connected = true;\n        this.info({ 'isWeb3Connected': this.isWeb3Connected });\n      });\n\n      window.ethereum.on('disconnect', () => {\n        this.isWeb3Connected = false;\n        this.info({ 'isWeb3Connected': this.isWeb3Connected });\n      });\n      */\n\n      window.ethereum.on('accountsChanged', accounts => {\n        this.wallet.accounts = accounts;\n      });\n\n      window.ethereum.on('chainChanged', chainID => {\n        const chain = EthereumSession.getChain( chainID );\n        if( !chain )\n          this.warn( `Unknown chain ${chainID}` );\n        \n        this.wallet.chain = chain;\n      });\n\n      /*\n      window.ethereum.on('message', message => {\n        if( message.type === 'eth_subscription' ){\n          \n        }\n        else{\n          this.debug( message );\n        }\n      });\n      */\n    }\n  }\n\n\n  /**\n   * logging\n   **/\n  debug( arg1 ){\n    const args = Array.prototype.slice.call( arguments );\n    console.debug( ...args );\n    this.log( 'DEBUG', ...args );\n  }\n\n  error( arg1 ){\n    const args = Array.prototype.slice.call( arguments );\n    console.error( ...args );\n    this.log( 'ERROR', ...args );\n  }\n\n  info( arg1 ){\n    const args = Array.prototype.slice.call( arguments );\n    console.info( ...args );\n    this.log( 'INFO', ...args );\n  }\n\n  log( severity, arg1 ){\n    try{\n      const logs = document.getElementById( 'logs' )\n      if( logs ){\n        const hr = document.createElement( 'hr' );\n        logs.appendChild( hr );\n\n        for( let i = 0; i < arguments.length; ++i ){\n          const json = document.createTextNode( JSON.stringify( arguments[i] ) )\n          logs.appendChild( json )\n        }\n      }\n    }\n    catch(_){}\n  }\n\n  warn( arg1 ){\n    const args = Array.prototype.slice.call( arguments );\n    console.warn( ...args );\n    this.log( 'WARN', ...args );\n  }\n}\n\nEthereumSession.COMMON_CHAINS = {\n  1: {\n    name:    'Ethereum Mainnet',\n    decimal:    1,\n    hex:     '0x1'\n  },\n  '0x1': {\n    name:    'Ethereum Mainnet',\n    decimal:    1,\n    hex:     '0x1'\n  },\n  3: {\n    name:    'Ropsten Testnet',\n    decimal:    3,\n    hex:     '0x3',\n    rpcURL:  'https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  '0x3': {\n    name:    'Ropsten Testnet',\n    decimal:    3,\n    hex:     '0x3',\n    rpcURL:  'https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  4: {\n    name:    'Rinkeby Testnet',\n    decimal:    4,\n    hex:     '0x4',\n    rpcURL:  'https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  '0x4': {\n    name:    'Rinkeby Testnet',\n    decimal:    4,\n    hex:     '0x4',\n    rpcURL:  'https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  5: {\n    name:    'Goerli Testnet',\n    decimal:    5,\n    hex:     '0x5',\n    rpcURL:  'https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  '0x5': {\n    name:    'Goerli Testnet',\n    decimal:    5,\n    hex:     '0x5',\n    rpcURL:  'https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  42: {\n    name:    'Kovan Testnet',\n    decimal:    42,\n    hex:     '0x2a',\n    rpcURL:  'https://kovan.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  '0x2a': {\n    name:    'Kovan Testnet',\n    decimal:    42,\n    hex:     '0x2a',\n    rpcURL:  'https://kovan.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  56: {\n    name:    'Binance Mainnet',\n    decimal:    56,\n    hex:     '0x38',\n    rpcURL:  'https://bsc-dataseed.binance.org/'\n  },\n  '0x38': {\n    name:    'Binance Mainnet',\n    decimal:    56,\n    hex:     '0x38',\n    rpcURL:  'https://bsc-dataseed.binance.org/'\n  },\n  97: {\n    name:    'Binance Testnet',\n    decimal:    97,\n    hex:     '0x57',\n    rpcURL:  'https://data-seed-prebsc-1-s1.binance.org:8545/'\n  },\n  '0x57': {\n    name:    'Binance Testnet',\n    decimal:    97,\n    hex:     '0x57',\n    rpcURL:  'https://data-seed-prebsc-1-s1.binance.org:8545/'\n  },\n  137: {\n    name:    'Matic',\n    decimal:    137,\n    hex:     '0x89',\n    rpcURL:  'https://rpc-mainnet.maticvigil.com/'\n  },\n  '0x89': {\n    name:    'Matic',\n    decimal:    137,\n    hex:     '0x89',\n    rpcURL:  'https://rpc-mainnet.maticvigil.com/'\n  }\n};\n  \nEthereumSession.IOS_PLATFORMS = [\n  'iPad Simulator',\n  'iPhone Simulator',\n  'iPod Simulator',\n  'iPad',\n  'iPhone',\n  'iPod'\n];\n\nexport default EthereumSession;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { WalletLinkConnector }    from \"@web3-react/walletlink-connector\";\n\nimport ContractAbi from '../artifacts/contracts/Bitbot.json';\nimport Modal from './Modal.js';\nimport \"./MintHome.css\";\n\nimport { ethers } from 'ethers';\nimport EthereumSession from '../lib/eth-session.js';\n\nconst mainnetConfig = {\n    'CONTRACT': '0x68cf439BA5D2897524091Ef81Cb0A3D1F56E5500',\n    'CHAIN_ID':  1,\n    'RPC_URL':   process.env.INFURA_API_MAINNET_KEY,\n    'ABI':       ContractAbi\n}\n\n/*\nconst rinkebyConfig = {\n    'CONTRACT': '0x91F9EA5939Cc707357808481b1B90ddaDa81bf33',\n    'CHAIN_ID':  4,\n    'RPC_URL':   process.env.INFURA_API_RINKEBY_KEY,\n    'ABI':       ContractAbi.abi\n}\n*/\n\nconst config = mainnetConfig;\n\nconst CONNECTORS = {};\nCONNECTORS.Walletlink = new WalletLinkConnector({\n    url: config.RPC_URL,\n    appLogoUrl: null,\n    appName: \"Bit Bot Society\",\n});\n\nCONNECTORS.WalletConnect = new WalletConnectConnector({\n    supportedChainIds: [config.CHAIN_ID],\n    rpc: config.RPC_URL,\n});\n\nexport default function MintHome () {\n    const context = useWeb3React();\n    \n    const [walletAddress, setWalletAddress] = useState(null);\n\n    const signedIn = !!walletAddress;\n\n    const [contractWithSigner, setContractWithSigner] = useState(null);\n    const [tokenPrice, setTokenPrice] = useState(0);\n    const [howManyTokens, setHowManyTokens] = useState(20)\n    const [totalSupply, setTotalSupply] = useState(0);\n    const [paused, setPaused] = useState(true);\n\n    const [modalShown, toggleModal] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const ethereumSession = useMemo(() => {\n        if( window.ethereum ){\n            const session = new EthereumSession({\n                chain:           EthereumSession.COMMON_CHAINS[ config.CHAIN_ID ],\n                contractAddress: config.CONTRACT,\n                contractABI:     config.ABI\n            });\n            return session;\n        }\n        else{\n            return null;\n        }\n    },[]);\n\n    useEffect(() => { \n        if( window.ethereum ){\n            ethereumSession.connectEthers()\n                .then(() => loadContractData())\n                .then(() => {\n                    if( ethereumSession.hasAccounts() )\n                        setWalletAddress( ethereumSession.wallet.accounts[0] );\n                })\n                .catch( err => {\n                    if( err.code === \"CALL_EXCEPTION\" ){\n                        //we're on the wrong chain\n                    }\n                    else{\n                        debugger\n                    }\n                })\n        }\n    }, []);\n\n    async function connectProvider( connector ){\n        context.activate( connector, async (err) => {\n          //other connectors\n          if( err.code === 4001 ){\n            //WalletLink: User denied account authorization\n            console.debug( err.message );\n            return;\n          }\n          else if( err.name === 'UserRejectedRequestError' ){\n            //WalletConnect: The user rejected the request\n            console.debug( err.message );\n            return;\n          }\n          else{\n            console.warn( err.message );\n          }\n        });\n    }\n\n    function redirect( to ){\n        if( to === 'metamask' ){\n            const link = 'https://metamask.app.link/dapp/'+ window.location.href.substr( 8 );\n            window.location = link;\n        }\n        else if( to === 'trustwallet' ){\n            const link = 'https://link.trustwallet.com/open_url?coin_id=60&url='+ window.location.href;\n            window.location = link;\n        }\n    }\n\n    async function signIn() { \n        if ( !window.ethereum ) {\n            setErrorMessage(<div id=\"providers\">\n                <p>No Ethereum interface injected into browser.<br />Other providers:</p>\n                <ul>\n                    <li onClick={() => connectProvider( CONNECTORS.Walletlink )}>&bull; Coinbase Wallet</li>\n                    <li onClick={() => redirect( 'metamask' )}>&bull; MetaMask</li>\n                    <li onClick={() => redirect( 'trustwallet' )}>&bull; Trust Wallet</li>\n                    <li onClick={() => connectProvider( CONNECTORS.WalletConnect )}>&bull; WalletConnect</li>\n                </ul>\n            </div>);\n            toggleModal(true);\n            return;\n        }\n\n        try{\n            let curChain = await ethereumSession.getWalletChainID();\n            await ethereumSession.connectEthers( true );\n            if( curChain !== ethereumSession.chain.hex ){\n                curChain = await ethereumSession.getWalletChainID();\n                if( curChain === ethereumSession.chain.hex ){\n                    //force the browser to switch to the new chain\n                    window.location.reload();\n                    return;\n                } else {\n                    setErrorMessage( `Switch network to the ${ethereumSession.chain.name} before continuing.`)\n                    toggleModal(true);\n                    return;\n                }\n            }\n\n            if (ethereumSession.hasAccounts()) {\n                setWalletAddress(ethereumSession.wallet.accounts[0])\n                await loadContractData()\n            }\n        }\n        catch( error ){\n            if (error.code === 4001) {\n                setErrorMessage(\"Sign in to mint Bit Bots!\")\n                toggleModal(true);\n            } else { \n                setErrorMessage(error)\n                toggleModal(true);\n            }\n        }\n    }\n\n    async function signOut() {\n        setWalletAddress(null)\n    }\n\n    async function loadContractData () {\n        const contract = ethereumSession.contract;\n        const signer = ethereumSession.ethersProvider.getSigner();\n        const contractWithSigner = contract.connect(signer)\n        const totalSupplyInit = await contract.totalSupply();\n        const tokenPrice = await contract.cost();\n        const paused = await contract.paused();\n\n        setContractWithSigner(contractWithSigner);\n        setTokenPrice(tokenPrice);\n        setTotalSupply(totalSupplyInit.toNumber())\n        setPaused(paused);\n    }\n\n    async function mint () { \n        if (!signedIn || !contractWithSigner){\n            setErrorMessage(\"Please connect wallet or reload the page!\")\n            toggleModal(true);\n            return\n        }\n\n        if( paused ){\n            setErrorMessage(\"Sale is not active right now.  Try again later!\")\n            toggleModal(true);\n            return;\n        }\n\n        if( !(await ethereumSession.connectAccounts( true )) ){\n            setErrorMessage(\"Please unlock your wallet and select an account.\")\n            toggleModal(true);\n            return;\n        }\n\n        if( !(await ethereumSession.connectChain( true )) ){\n            setErrorMessage(`Please open your wallet and select ${ethereumSession.chain.name}.`);\n            toggleModal(true);\n            return;\n        }\n\n        if ( ethereumSession.chain.hex !== await ethereumSession.getWalletChainID() ){\n            window.location.reload();\n            return;\n        }\n\n        //connected\n        try{\n            const price = String(tokenPrice * howManyTokens)\n\n            const overrides = {\n                from: walletAddress, \n                value: price\n            }\n\n            const gasBN = await ethereumSession.contract.estimateGas.mint(howManyTokens, overrides);\n            const finalGasBN = gasBN.mul( ethers.BigNumber.from(11) ).div( ethers.BigNumber.from(10) );\n            overrides.gasLimit = finalGasBN.toString();\n\n            const txn = await contractWithSigner.mint(howManyTokens, overrides)\n            await txn.wait();\n            setMintingSuccess(howManyTokens)\n        } catch (error) {\n            if (error.error) {\n                setMintingError(error.error.message)\n            } \n        }\n    }\n\n    const setMintingSuccess = (howManyTokens) => {\n        setErrorMessage(\"Congrats on minting \" + howManyTokens + \"  Bit Bots!!\");\n        toggleModal(true);\n    }\n\n    const setMintingError = (error) => {\n        setErrorMessage(error);\n        toggleModal(true);\n    }\n\n    const mintOne = () => { \n        setErrorMessage(\"Must mint atleast one Bit Bot!\")\n        toggleModal(true);\n    }\n\n    function checkHowMany (newNumber) { \n        if (newNumber > 20) {\n            setHowManyTokens(20)\n        } else if (newNumber < 1) { \n            setHowManyTokens(\"\")\n        } else { \n            setHowManyTokens(newNumber) \n        }\n    }\n\n    const paraText = signedIn ? \"INPUT NUMBER OF BIT BOTS TO MINT (0.015 ETH): \" : \"CONNECT WALLET ABOVE TO MINT BIT BOTS!\"\n    const buttonText = signedIn ? \"MINT \" + howManyTokens + \" BIT BOTS!\" : \"CONNECT WALLET TO MINT\"\n\n    return (\n        <div id=\"#home\">\n            <div className=\"minthomeBg\" />\n            <div className=\"minthome__container\">\n                <div className=\"minthome__info\">\n                    <h1>MINT A BIT BOT!</h1>\n                    <div className=\"minthome__signIn\"> \n                        {!signedIn ? <button onClick={signIn}>CONNECT WALLET</button>\n                            : <button onClick={signOut}>WALLET CONNECTED<br /> CLICK TO SIGN OUT</button>\n                        }\n                    </div>\n                    \n                    <p>{paraText}</p>\n                    \n                    <div className={signedIn ? \"minthome__signIn-input\" : \"minthome__signIn-input-false\"}>\n                        <input \n                            type=\"number\" \n                            min=\"1\"\n                            max=\"20\"\n                            value={howManyTokens}\n                            onChange={ e => checkHowMany(e.target.value) }\n                            name=\"\" \n                        />\n                    </div>\n                    \n                    <br/>\n                    \n                    <div className={signedIn ? \"minthome__mint\" : \"minthome__mint-false\"}>\n                        {howManyTokens > 0 ? <button onClick={() => mint()}>{buttonText}</button>\n                            : <button onClick={() => mintOne()}>{buttonText}</button>\n                        }\n                    </div>\n                </div>\n            </div>\n\n            <Modal\n                shown={modalShown}\n                close={() => {\n                    toggleModal(false);\n                }}\n                message={errorMessage}\n            ></Modal>\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/welcomeGif.e2674867.gif\";","import React from 'react';\nimport \"./Welcome.css\";\nimport welcomeGif from '../images/welcomeGif.gif';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDiscord, faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport { Link } from \"react-router-dom\";\n\nexport default function Welcome () {\n    return (\n        <div className=\"welcome\" id=\"Welcome\">\n            <div className=\"welcome__container\">\n                <h1>Welcome to Bit Bot Society</h1> \n                <p>Bots don’t use roadmaps, they are programmed with GPS to beep boop directly into the Metaverse!</p>\n                <button className=\"welcome__button\"><a href=\"https://opensea.io/collection/bit-bot-society\" target=\"_blank\" rel=\"noreferrer\" className=\"welcome__link\">Bit Bot Opensea</a></button>\n                <div className=\"welcome-linksWrapper\">\n                    <Link className=\"welcome-links\" to={{ pathname: \"https://twitter.com/BitBotSociety\" }} target=\"_blank\" rel=\"noreferrer\">\n                        <FontAwesomeIcon icon={faTwitter} />\n                    </Link>\n                    <Link className=\"welcome-links\" to={{ pathname: \"https://discord.com/invite/kG24rk4cMD\" }} target=\"_blank\" rel=\"noreferrer\">\n                        <FontAwesomeIcon icon={faDiscord} />\n                    </Link>\n                </div>\n            </div>\n            <div className=\"welcome__imgContainer\">\n                <img src={welcomeGif} alt=\"Giraffe Gif\"/>\n            </div>\n        </div>\n    \n    );\n}\n","export default __webpack_public_path__ + \"static/media/bitbotRap.fb5944b4.mp4\";","import React from 'react';\nimport \"./About.css\";\nimport rap from '../images/bitbotRap.mp4'\nimport pattern from '../images/star2.jpeg';\n\nexport default function About () {\n    return (\n        <div className=\"about\" id=\"project\" style={{ backgroundImage: `url(${pattern})` }}>\n            <div className=\"about__wrapper\">\n                <video controls>\n                    <source src={rap} type=\"video/mp4\" />\n                    Your browser does not support the video tag.\n                </video>\n            </div>\n            <div className=\"about__container\"  >\n                <h1>About Bit Bot Society</h1> \n                <p>Bit Bot Society is a collection of 9,999 Robot NFTs living on the Ethereum blockchain who beep boop right into the Metaverse. Each Bit Bot NFT is uniquely generated from a pool of 152+ different traits!</p>\n            </div>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/1.0464b18b.png\";","export default __webpack_public_path__ + \"static/media/2.6973cc38.png\";","export default __webpack_public_path__ + \"static/media/3.1163c836.png\";","export default __webpack_public_path__ + \"static/media/4.c00250a8.png\";","export default __webpack_public_path__ + \"static/media/5.a97c4fb7.png\";","export default __webpack_public_path__ + \"static/media/6.53972277.png\";","export default __webpack_public_path__ + \"static/media/7.2c3ef2d7.png\";","export default __webpack_public_path__ + \"static/media/8.53dbd94a.png\";","import React from 'react';\nimport \"./Display.css\";\nimport a from '../images/1.png';\nimport b from '../images/2.png';\nimport c from '../images/3.png';\nimport d from '../images/4.png';\nimport e from '../images/5.png';\nimport f from '../images/6.png';\nimport g from '../images/7.png';\nimport h from '../images/8.png';\n\nexport default function Display () {\n    return (\n        <div className=\"display__wrapper\" id=\"display\">\n            <div className=\"display\">\n                <h1>Vision for the Community and Future</h1>\n                <p>We lowered gas for everyone so we can all beep boop into the metaverse! #BeepboopBitbot</p>\n                <div className=\"display__container\">\n                    <div className=\"display__individual\">\n                        <img src={a} alt=\"bitbot example\"/>\n                    </div>\n                    <div className=\"display__individual\">\n                        <img src={b} alt=\"bitbot example\" />\n                    </div>\n                    <div className=\"display__individual\">\n                        <img src={c} alt=\"bitbot example\" />\n                    </div>\n                    <div className=\"display__individual\">\n                        <img src={d} alt=\"bitbot example\" />\n                    </div>\n                    <div className=\"display__individual\">\n                        <img src={e} alt=\"bitbot example\" />\n                    </div>\n                    <div className=\"display__individual\">\n                        <img src={f} alt=\"bitbot example\" />\n                    </div>\n                </div>\n            </div>  \n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/CHRIS.677dec61.png\";","export default __webpack_public_path__ + \"static/media/JAY.0944be1c.png\";","import React from 'react';\nimport \"./Team.css\";\nimport chris from '../images/CHRIS.png'\nimport jay from '../images/JAY.png'\n\nexport default function Team () {\n    return (\n        <div className=\"team\" id=\"team\">\n            <div className=\"team__container\">\n                <h1>Lead BitBots</h1> \n            </div>\n            <div className=\"team__imgContainer\">\n                <div className=\"team__imgIndividual\">\n                    <img src={chris} alt=\"Bitbot Founders\"/>\n                    <figcaption className=\"caption\">Chris</figcaption>\n                </div>\n                <div className=\"team__imgIndividual\">\n                    <img src={jay} alt=\"Bitbot Founders\"/>\n                    <figcaption className=\"caption\">Jay</figcaption>\n                </div>\n            </div>\n        </div>\n    \n    );\n}\n","import React from 'react';\nimport \"./Info.css\";\nimport pattern from '../images/star2.jpeg';\n\nexport default function Info () {\n    return (\n        <div className=\"info\" id=\"info\" style={{ backgroundImage: `url(${pattern})` }}>\n            <div className=\"info__container\"  >\n                <h1>Bit Bot Society Information</h1> \n                <ul>\n                    <li>\n                        Presale: SOLD OUT\n                    </li>\n                    <li>\n                        Mint will be done in increments!\n                    </li>\n                    <li>\n                        Airdrops to holders as mint proceeds.\n                    </li>\n                    <li>\n                        Total number of Bit Bot NFTs: 9,999\n                    </li>\n                    <li>\n                        Price per NFT: 0.015 ETH + gas (REDUCED GAS)\n                    </li>\n                    <li>\n                        Token type: ERC-721\n                    </li>\n                    <li>\n                        Blockchain: Ethereum\n                    </li>\n                    <li>\n                        Smart contract: <span className=\"contractAddy\">0x68cf439BA5D2897524091Ef81Cb0A3D1F56E5500</span>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    );\n}\n","import React, { Component } from 'react'; \nimport { HashLink } from \"react-router-hash-link\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDiscord, faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport logo from '../images/logo.png'\n\nimport \"./Footer.css\";\n\nexport default class Footer extends Component { \n  render () {\n    return (\n      <nav className=\"footer\">\n        <div className=\"footer-container\">\n          <HashLink smooth to=\"#home\" className=\"footer-logo\">\n            <img src={logo} alt=\"bitbot logo\"/>\n          </HashLink>\n\n          <div className=\"footer__space\"/>\n\n          <ul className=\"footer-menu\">\n            <li className=\"footer-item\">\n              <Link className=\"footer-links\" to={{ pathname: \"https://twitter.com/BitBotSociety\" }} target=\"_blank\" >\n                <FontAwesomeIcon icon={faTwitter} />\n              </Link>\n            </li>\n            <li className=\"footer-item\">\n              <Link className=\"footer-links\" to={{ pathname: \"https://discord.com/invite/kG24rk4cMD\" }} target=\"_blank\" >\n                <FontAwesomeIcon icon={faDiscord} />\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport MintHome from './components/MintHome';\nimport Welcome from './components/Welcome'\nimport About from './components/About'\nimport Display from './components/Display'\nimport Team from './components/Team'\nimport Info from './components/Info'\nimport Footer from './components/Footer'\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <>\n        <Router>\n          <Switch />\n          <Navbar />\n          <MintHome />\n          <Welcome />\n          <About />\n          <Display />\n          <Team />\n          <Info />\n          <Footer />\n        </Router> \n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Web3ReactProvider } from '@web3-react/core'\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nfunction getLibrary(provider){\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 12000\n  return library\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}