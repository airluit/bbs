{"version":3,"sources":["images/logo.png","components/Navbar.js","images/star2.jpeg","components/Modal.js","lib/wallet.js","lib/eth-session.js","components/MintHome.js","images/welcomeGif.gif","components/Welcome.js","images/bitbotRap.mp4","images/8.png","components/About.js","images/roadmap.jpeg","components/Display.js","images/teamImages/1.png","images/teamImages/2.png","images/teamImages/3.png","images/teamImages/4.png","images/teamImages/5.png","images/teamImages/6.png","images/teamImages/7.png","images/teamImages/8.png","images/teamImages/9.png","images/teamImages/10.png","images/teamImages/11.png","images/teamImages/12.png","images/teamImages/13.png","images/teamImages/14.png","images/teamImages/15.png","images/teamImages/16.png","components/Team.js","pages/Home.js","components/NavbarTerms.js","components/Terms.js","pages/TermsAndConditions.js","components/Owners.js","pages/Ownership.js","images/footerImage.mp4","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","state","isOpen","handleToggle","setState","className","this","id","smooth","to","src","logo","alt","href","rel","target","pathname","icon","faTwitter","faDiscord","onClick","faTimes","faBars","Component","Modal","children","shown","close","message","e","stopPropagation","style","backgroundImage","pattern","Wallet","accounts","chain","EthereumSession","args","contractAddress","contractABI","isWeb3Connected","lastError","provider","wallet","ethersProvider","web3client","debug","a","window","ethereum","request","method","params","hex","rpcURL","deep","ethers","require","providers","Web3Provider","warn","contract","Contract","isConnected","connectChain","connectAccounts","Web3","err","subscribe","eth","hasAccounts","getWalletAccounts","requestWalletAccounts","isChainConnected","getWalletChainID","chainID","getChain","setChainID","addChain","isWalletAllowed","JSON","stringify","decimal","permissions","some","p","parentCapability","length","code","alert","hexChainID","chainId","on","arg1","Array","prototype","slice","call","arguments","console","log","error","info","severity","logs","document","getElementById","hr","createElement","appendChild","i","json","createTextNode","_","COMMON_CHAINS","parseInt","name","IOS_PLATFORMS","config","process","INFURA_API_MAINNET_KEY","ContractAbi","CONNECTORS","MintHome","context","useWeb3React","useState","walletAddress","setWalletAddress","signedIn","setContract","contractWithSigner","setContractWithSigner","tokenPrice","setTokenPrice","howManyTokens","setHowManyTokens","totalSupply","setTotalSupply","paused","setPaused","modalShown","toggleModal","errorMessage","setErrorMessage","ethereumSession","useMemo","CHAIN_ID","CONTRACT","ABI","connectProvider","connector","activate","redirect","link","location","substr","Walletlink","WalletConnect","curChain","connectEthers","reload","loadContractData","signer","getSigner","connect","cost","toNumber","price","String","overrides","from","value","estimateGas","mint","gasBN","finalGasBN","mul","BigNumber","div","gasLimit","toString","txn","wait","setMintingSuccess","setMintingError","useEffect","then","catch","paraText","buttonText","type","min","max","onChange","newNumber","WalletLinkConnector","url","RPC_URL","appLogoUrl","appName","WalletConnectConnector","supportedChainIds","rpc","Welcome","welcomeGif","About","dangerouslySetInnerHTML","__html","rap","pic","Display","roadmap","Team","b","c","d","f","g","h","j","k","l","m","n","o","Home","NavbarTerms","Terms","TermsAndConditions","Owners","Ownership","Footer","loop","autoPlay","muted","footerVid","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getLibrary","library","pollingInterval"],"mappings":"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","file":"static/js/main.e5ad5abe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.4204ea6f.png\";","import React, { Component } from 'react'; \nimport { HashLink } from \"react-router-hash-link\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDiscord, faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport { faTimes, faBars } from '@fortawesome/free-solid-svg-icons'\nimport logo from '../images/logo.png'\n\nimport \"./Navbar.css\";\n\nexport default class Navbar extends Component { \n  state = {\n    isOpen: false\n  };\n\n  handleToggle = () => { \n    this.setState({ isOpen: !this.state.isOpen })\n  };\n\n  render () {\n    return (\n      <nav className={this.state.isOpen ? \"navbar active\" : \"navbar\"} id=\"#fullhome\">\n        <div className=\"nav-container\">\n          <HashLink smooth to=\"#fullhome\" className=\"nav-logo\">\n            <img className=\"nav__imgLogo\" src={logo} alt=\"GATB Logo\"/>\n          </HashLink>\n\n          <ul className={this.state.isOpen ? \"nav-menu active\" : \"nav-menu\"}>\n            <li className=\"nav-item\">\n              <HashLink\n                smooth\n                to=\"#project\"\n                className=\"nav-links\"\n              >\n                WHY BITBOTS\n              </HashLink>\n            </li>\n            <li className=\"nav-item\">\n              <HashLink\n                smooth\n                to=\"#roadmap\"\n                className=\"nav-links\"\n              >\n                ROADMAP\n              </HashLink>\n            </li>\n            <li className=\"nav-item\">\n              <HashLink\n                smooth \n                to=\"#team\"\n                className=\"nav-links\"\n              >\n                TEAM\n              </HashLink>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"https://raritysniper.com/bit-bot-society\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"nav-links\">\n                RARITY\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-links\" to={{ pathname: \"https://twitter.com/BitBotSociety\" }} target=\"_blank\" >\n                <FontAwesomeIcon icon={faTwitter} />\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-links\" to={{ pathname: \"https://discord.com/invite/kG24rk4cMD\" }} target=\"_blank\" >\n                <FontAwesomeIcon icon={faDiscord} />\n              </Link>\n            </li>\n          </ul>\n          <div className=\"nav-icon\" onClick={this.handleToggle}>\n            {this.state.isOpen ? <FontAwesomeIcon icon={faTimes} />\n              : <FontAwesomeIcon icon={faBars} />\n            }\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}","export default __webpack_public_path__ + \"static/media/star2.0e1230f7.jpeg\";","import React, {useEffect, useRef} from 'react'; \nimport './Modal.css';\nimport pattern from '../images/star2.jpeg';\n\nexport default function Modal({ children, shown, close, message }) {\n    return shown ? (\n      <div className=\"modal-backdrop\" onClick={() => { close(); }}>\n        <div className=\"modal-content\" onClick={e => { e.stopPropagation(); }} style={{ backgroundImage: `url(${pattern})` }} >\n          <div className=\"modal__text\">\n            <div>\n              {message} \n            </div>\n          </div>\n          <button onClick={close}>OK</button>\n        </div>\n      </div>\n    ) : null;\n  }\n","class Wallet{\n  accounts = [];\n  chain    = null;\n\n  constructor(){\n    this.accounts = [];\n    this.chain = null;\n  }\n}\n\nexport default Wallet;","import Wallet from './wallet.js';\n\nclass EthereumSession{\n  chain           = null;\n  contractAddress = null;\n  contractABI     = null;\n  isWeb3Connected = false;\n  lastError       = null;\n  provider        = null;\n  wallet          = null;\n\n  ethersProvider  = null;\n  web3client      = null;\n\n  constructor( args ){\n    this.chain = args.chain;\n    this.contractAddress = args.contractAddress;\n    this.contractABI = args.contractABI;\n    this.wallet = new Wallet();\n    \n    if( args.provider ){\n      this.provider = args.provider;\n    }\n\n    this.debug( \"EthereumSession.constructor()\" );\n  }\n\n  async addChain( chain ){\n    try{\n      this.lastError = null;\n      await window.ethereum.request({ method: 'wallet_addEthereumChain', params: [{ 'chainId': chain.hex, 'rpcUrls': chain.rpcURL }] });\n      return true;\n    }\n    catch( err ){\n      this.lastError = err;\n      return false;\n    }\n  }\n\n  async connectEthers( deep ){\n    let ethers;\n    try{\n      ethers = require( 'ethers' );\n    }\n    catch( err ){\n      return false;\n    }\n\n    let subscribe = false;\n    if( window.ethereum && !this.ethersProvider ){\n      subscribe = true;\n      this.ethersProvider = new ethers.providers.Web3Provider( window.ethereum, 'any' );\n      this.debug( 'using browser' );\n    }\n\n    if( !this.ethersProvider && this.provider ){\n      subscribe = true;\n      this.ethersProvider = new ethers.providers.Web3Provider( this.provider, 'any' );\n      this.debug( 'using NETWORK override' );\n    }\n\n    if( !this.ethersProvider ){\n      this.warn( 'No web3 provider' );\n      return false;\n    }\n\n    if( !this.contract ){\n      //const signer = this.ethersProvider.getSigner();\n      this.contract = new ethers.Contract( this.contractAddress, this.contractABI, this.ethersProvider );\n    }\n\n    if( window.ethereum.isConnected() ){\n      //if( subscribe )\n      //  this.subscribe();\n    }\n    else{\n      return false;\n    }\n\n\n    if( !(await this.connectChain( deep )) )\n      return false;\n\n    if( !(await this.connectAccounts( deep )) )\n      return false;\n\n    return true;\n  }\n\n  async connectWeb3( deep ){\n    let Web3 = null;\n    try{\n      Web3 = require( 'web3' );\n    }\n    catch( err ){\n      debugger\n    }\n\n    let subscribe = false;\n    if( window.ethereum && !this.web3client ){\n      subscribe = true;\n      this.web3client = new Web3( window.ethereum );\n      this.debug( 'using browser' );\n    }\n\n    if( !this.web3client && this.provider ){\n      subscribe = true;\n      this.web3client = new Web3( this.provider );\n      this.debug( 'using NETWORK override' );\n    }\n\n    if( !this.web3client ){\n      this.warn( 'No web3 provider' );\n      return false;\n    }\n\n\n    if( !this.contract )\n      this.contract = new this.web3client.eth.Contract( this.contractABI, this.contractAddress );\n\n    if( window.ethereum.isConnected() ){\n      if( subscribe )\n        this.subscribe();\n    }\n    else{\n      return false;\n    }\n\n\n    if( !(await this.connectChain( deep )) )\n      return false;\n\n    if( !(await this.connectAccounts( deep )) )\n      return false;\n\n    return true;\n  }\n\n  async connectAccounts( deep ){\n    if( this.hasAccounts() )\n      return true;\n\n    this.wallet.accounts = await this.getWalletAccounts();\n    if( this.hasAccounts() )\n      return true;\n\n    if( deep ){\n      this.wallet.accounts = await this.requestWalletAccounts();\n      return this.hasAccounts();\n    }\n\n    return false;\n  }\n\n  async connectChain( deep ){\n    if( this.isChainConnected() )\n      return true;\n\n    const chainID = await this.getWalletChainID();\n    this.wallet.chain = EthereumSession.getChain( chainID );\n    if( this.isChainConnected() )\n      return true;\n\n    if( deep ){\n      if( await this.setChainID( this.chain.hex ) ){\n        const chainID = await this.getWalletChainID();\n        this.wallet.chain = EthereumSession.getChain( chainID );\n        return this.isChainConnected();\n      }\n\n      if( await this.addChain( this.chain ) ){\n        const chainID = await this.getWalletChainID();\n        this.wallet.chain = EthereumSession.getChain( chainID );\n        if( this.isChainConnected() )\n          return true;\n\n        if( await this.setChainID( this.chain.hex ) ){\n          const chainID = await this.getWalletChainID();\n          this.wallet.chain = EthereumSession.getChain( chainID );\n          return this.isChainConnected();\n        }\n      }\n    }\n\n    return false;\n  }\n\n  static getChain( chainID ){\n    if( chainID in EthereumSession.COMMON_CHAINS )\n      return EthereumSession.COMMON_CHAINS[ chainID ];\n\n    if( typeof chainID === 'string' ){\n      chainID = parseInt( chainID );\n      if( chainID in EthereumSession.COMMON_CHAINS )\n        return EthereumSession.COMMON_CHAINS[ chainID ];\n    }\n\n    return null;\n  }\n\n  async getWalletAccounts(){\n    const isAllowed = await this.isWalletAllowed();\n    if( isAllowed !== false ){\n      try{\n        const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n        return accounts;\n      }\n      catch( err ){\n        this.warn({ 'getWalletAccounts': JSON.stringify( err ) });\n        return [];\n      }\n    }\n    else{\n      return [];\n    }\n  }\n\n  async getWalletChainID(){\n    try{\n      const chainID = await window.ethereum.request({ method: 'eth_chainId' });\n      return chainID;\n    }\n    catch( err ){\n      this.warn({ 'getWalletChainID': JSON.stringify( err ) });\n      return null;\n    }\n  }\n\n  isChainConnected(){\n    if( this.wallet.chain )\n      return this.wallet.chain.decimal === this.chain.decimal;\n    else\n      return false;\n  }\n\n  async isConnected(){\n    if( !window.ethereum.isConnected() )\n      return false;\n\n    if( !this.isChainConnected() )\n      return false;\n\n    if( !(await this.hasAccounts()) )\n      return false;\n    \n    return true;\n  }\n\n  async isWalletAllowed(){\n    try{\n      const permissions = await window.ethereum.request({ method: 'wallet_getPermissions' })\n      return permissions.some( p => p.parentCapability === 'eth_accounts' )\n    }\n    catch( err ){\n      this.warn({ 'isWalletAllowed': JSON.stringify( err ) });\n      return null;\n    }\n  }\n\n  hasAccounts(){\n    return !!(this.wallet.accounts && this.wallet.accounts.length)\n  }\n\n  //unlock\n  async requestWalletAccounts(){\n    try{\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' })\n      return accounts\n    }\n    catch( err ){\n      if( err.code === -32002 ){\n        alert( `Help!  Unlock your wallet and try again.` );\n      }\n      else if( err.code === 4001 ){\n        alert( `Oops!  No account(s) selected, try again.` );\n      }\n      else{\n        this.warn({ 'requestWalletAccounts': err });\n        alert( `Oops!  Unknown wallet error, check your wallet and try again.` );\n      }\n      return []\n    }\n  }\n\n  async setChainID( hexChainID ){\n    try{\n      this.lastError = null;\n      await window.ethereum.request({ method: 'wallet_switchEthereumChain', params: [{ chainId: hexChainID }] });\n      return true;\n    }\n    catch( err ){\n      this.lastError = err;\n      if( err.code === 4001 ){\n        //user rejected selection\n      }\n      else if( err.code === 4902 ){\n        //add failed\n      }\n\n      return false;\n    }\n  }\n\n  subscribe(){\n    if( window.ethereum ){\n      /*\n      window.ethereum.on('connect', connectInfo => {\n        this.isWeb3Connected = true;\n        this.info({ 'isWeb3Connected': this.isWeb3Connected });\n      });\n      window.ethereum.on('disconnect', () => {\n        this.isWeb3Connected = false;\n        this.info({ 'isWeb3Connected': this.isWeb3Connected });\n      });\n      */\n\n      window.ethereum.on('accountsChanged', accounts => {\n        this.wallet.accounts = accounts;\n      });\n\n      window.ethereum.on('chainChanged', chainID => {\n        const chain = EthereumSession.getChain( chainID );\n        if( !chain )\n          this.warn( `Unknown chain ${chainID}` );\n        \n        this.wallet.chain = chain;\n      });\n\n      /*\n      window.ethereum.on('message', message => {\n        if( message.type === 'eth_subscription' ){\n          \n        }\n        else{\n          this.debug( message );\n        }\n      });\n      */\n    }\n  }\n\n\n  /**\n   * logging\n   **/\n  debug( arg1 ){\n    const args = Array.prototype.slice.call( arguments );\n    console.debug( ...args );\n    this.log( 'DEBUG', ...args );\n  }\n\n  error( arg1 ){\n    const args = Array.prototype.slice.call( arguments );\n    console.error( ...args );\n    this.log( 'ERROR', ...args );\n  }\n\n  info( arg1 ){\n    const args = Array.prototype.slice.call( arguments );\n    console.info( ...args );\n    this.log( 'INFO', ...args );\n  }\n\n  log( severity, arg1 ){\n    try{\n      const logs = document.getElementById( 'logs' )\n      if( logs ){\n        const hr = document.createElement( 'hr' );\n        logs.appendChild( hr );\n\n        for( let i = 0; i < arguments.length; ++i ){\n          const json = document.createTextNode( JSON.stringify( arguments[i] ) )\n          logs.appendChild( json )\n        }\n      }\n    }\n    catch(_){}\n  }\n\n  warn( arg1 ){\n    const args = Array.prototype.slice.call( arguments );\n    console.warn( ...args );\n    this.log( 'WARN', ...args );\n  }\n}\n\nEthereumSession.COMMON_CHAINS = {\n  1: {\n    name:    'Ethereum Mainnet',\n    decimal:    1,\n    hex:     '0x1'\n  },\n  '0x1': {\n    name:    'Ethereum Mainnet',\n    decimal:    1,\n    hex:     '0x1'\n  },\n  3: {\n    name:    'Ropsten Testnet',\n    decimal:    3,\n    hex:     '0x3',\n    rpcURL:  'https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  '0x3': {\n    name:    'Ropsten Testnet',\n    decimal:    3,\n    hex:     '0x3',\n    rpcURL:  'https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  4: {\n    name:    'Rinkeby Testnet',\n    decimal:    4,\n    hex:     '0x4',\n    rpcURL:  'https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  '0x4': {\n    name:    'Rinkeby Testnet',\n    decimal:    4,\n    hex:     '0x4',\n    rpcURL:  'https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  5: {\n    name:    'Goerli Testnet',\n    decimal:    5,\n    hex:     '0x5',\n    rpcURL:  'https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  '0x5': {\n    name:    'Goerli Testnet',\n    decimal:    5,\n    hex:     '0x5',\n    rpcURL:  'https://goerli.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  42: {\n    name:    'Kovan Testnet',\n    decimal:    42,\n    hex:     '0x2a',\n    rpcURL:  'https://kovan.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  '0x2a': {\n    name:    'Kovan Testnet',\n    decimal:    42,\n    hex:     '0x2a',\n    rpcURL:  'https://kovan.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161'\n  },\n  56: {\n    name:    'Binance Mainnet',\n    decimal:    56,\n    hex:     '0x38',\n    rpcURL:  'https://bsc-dataseed.binance.org/'\n  },\n  '0x38': {\n    name:    'Binance Mainnet',\n    decimal:    56,\n    hex:     '0x38',\n    rpcURL:  'https://bsc-dataseed.binance.org/'\n  },\n  97: {\n    name:    'Binance Testnet',\n    decimal:    97,\n    hex:     '0x57',\n    rpcURL:  'https://data-seed-prebsc-1-s1.binance.org:8545/'\n  },\n  '0x57': {\n    name:    'Binance Testnet',\n    decimal:    97,\n    hex:     '0x57',\n    rpcURL:  'https://data-seed-prebsc-1-s1.binance.org:8545/'\n  },\n  137: {\n    name:    'Matic',\n    decimal:    137,\n    hex:     '0x89',\n    rpcURL:  'https://rpc-mainnet.maticvigil.com/'\n  },\n  '0x89': {\n    name:    'Matic',\n    decimal:    137,\n    hex:     '0x89',\n    rpcURL:  'https://rpc-mainnet.maticvigil.com/'\n  }\n};\n  \nEthereumSession.IOS_PLATFORMS = [\n  'iPad Simulator',\n  'iPhone Simulator',\n  'iPod Simulator',\n  'iPad',\n  'iPhone',\n  'iPod'\n];\n\nexport default EthereumSession;","import React, { useEffect, useMemo, useState } from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { WalletLinkConnector }    from \"@web3-react/walletlink-connector\";\n\nimport ContractAbi from '../artifacts/contracts/Bitbot.json';\nimport Modal from './Modal.js';\nimport \"./MintHome.css\";\n\nimport { ethers } from 'ethers';\nimport EthereumSession from '../lib/eth-session.js';\n\nconst mainnetConfig = {\n    'CONTRACT': '0x68cf439BA5D2897524091Ef81Cb0A3D1F56E5500',\n    'CHAIN_ID':  1,\n    'RPC_URL':   process.env.INFURA_API_MAINNET_KEY,\n    'ABI':       ContractAbi\n}\n\n/*\nconst rinkebyConfig = {\n    'CONTRACT': '0x91F9EA5939Cc707357808481b1B90ddaDa81bf33',\n    'CHAIN_ID':  4,\n    'RPC_URL':   process.env.INFURA_API_RINKEBY_KEY,\n    'ABI':       ContractAbi.abi\n}\n*/\n\nconst config = mainnetConfig;\n\nconst CONNECTORS = {};\nCONNECTORS.Walletlink = new WalletLinkConnector({\n    url: config.RPC_URL,\n    appLogoUrl: null,\n    appName: \"BitBot Society\",\n});\n\nCONNECTORS.WalletConnect = new WalletConnectConnector({\n    supportedChainIds: [config.CHAIN_ID],\n    rpc: config.RPC_URL,\n});\n\nexport default function MintHome () {\n    const context = useWeb3React();\n    \n    const [walletAddress, setWalletAddress] = useState(null);\n\n    const signedIn = !!walletAddress;\n\n    const [contract, setContract] = useState(null);\n    const [contractWithSigner, setContractWithSigner] = useState(null);\n    const [tokenPrice, setTokenPrice] = useState(0);\n    const [howManyTokens, setHowManyTokens] = useState(20)\n    const [totalSupply, setTotalSupply] = useState(0);\n    const [paused, setPaused] = useState(true);\n\n    const [modalShown, toggleModal] = useState(false);\n    const [errorMessage, setErrorMessage] = useState(\"\");\n\n    const ethereumSession = useMemo(() => {\n        if( window.ethereum ){\n            const session = new EthereumSession({\n                chain:           EthereumSession.COMMON_CHAINS[ config.CHAIN_ID ],\n                contractAddress: config.CONTRACT,\n                contractABI:     config.ABI\n            });\n            return session;\n        }\n        else{\n            return null;\n        }\n    },[]);\n\n    useEffect(() => { \n        if( window.ethereum ){\n            ethereumSession.connectEthers()\n                .then(() => loadContractData())\n                .then(() => {\n                    if( ethereumSession.hasAccounts() )\n                        setWalletAddress( ethereumSession.wallet.accounts[0] );\n                })\n                .catch( err => {\n                    if( err.code === \"CALL_EXCEPTION\" ){\n                        //we're on the wrong chain\n                    }\n                    else{\n                        debugger\n                    }\n                })\n        }\n    }, []);\n\n    async function connectProvider( connector ){\n        context.activate( connector, async (err) => {\n          //other connectors\n          if( err.code === 4001 ){\n            //WalletLink: User denied account authorization\n            console.debug( err.message );\n            return;\n          }\n          else if( err.name === 'UserRejectedRequestError' ){\n            //WalletConnect: The user rejected the request\n            console.debug( err.message );\n            return;\n          }\n          else{\n            console.warn( err.message );\n          }\n        });\n    }\n\n    function redirect( to ){\n        if( to === 'metamask' ){\n            const link = 'https://metamask.app.link/dapp/'+ window.location.href.substr( 8 );\n            window.location = link;\n        }\n        else if( to === 'trustwallet' ){\n            const link = 'https://link.trustwallet.com/open_url?coin_id=60&url='+ window.location.href;\n            window.location = link;\n        }\n    }\n\n    async function signIn() { \n        if ( !window.ethereum ) {\n            setErrorMessage(<div id=\"providers\">\n                <p>No Ethereum interface injected into browser.<br />Other providers:</p>\n                <ul>\n                    <li onClick={() => connectProvider( CONNECTORS.Walletlink )}>&bull; Coinbase Wallet</li>\n                    <li onClick={() => redirect( 'metamask' )}>&bull; MetaMask</li>\n                    <li onClick={() => redirect( 'trustwallet' )}>&bull; Trust Wallet</li>\n                    <li onClick={() => connectProvider( CONNECTORS.WalletConnect )}>&bull; WalletConnect</li>\n                </ul>\n            </div>);\n            toggleModal(true);\n            return;\n        }\n\n        try{\n            let curChain = await ethereumSession.getWalletChainID();\n            await ethereumSession.connectEthers( true );\n            if( curChain !== ethereumSession.chain.hex ){\n                curChain = await ethereumSession.getWalletChainID();\n                if( curChain === ethereumSession.chain.hex ){\n                    //force the browser to switch to the new chain\n                    window.location.reload();\n                    return;\n                } else {\n                    setErrorMessage( `Switch network to the ${ethereumSession.chain.name} before continuing.`)\n                    toggleModal(true);\n                    return;\n                }\n            }\n\n            if (ethereumSession.hasAccounts()) {\n                setWalletAddress(ethereumSession.wallet.accounts[0])\n                await loadContractData()\n            }\n        }\n        catch( error ){\n            if (error.code === 4001) {\n                setErrorMessage(\"Sign in to mint BitBots!\")\n                toggleModal(true);\n            } else { \n                setErrorMessage(error)\n                toggleModal(true);\n            }\n        }\n    }\n\n    async function signOut() {\n        setWalletAddress(null)\n    }\n\n    async function loadContractData () {\n        const contract = ethereumSession.contract;\n        const signer = ethereumSession.ethersProvider.getSigner();\n        const contractWithSigner = contract.connect(signer)\n        const totalSupply = await contract.totalSupply();\n        const tokenPrice = await contract.cost();\n        const paused = await contract.paused();\n\n        setContract(contract);\n        setContractWithSigner(contractWithSigner);\n        setTokenPrice(tokenPrice);\n        setTotalSupply(totalSupply.toNumber())\n        setPaused(paused);\n    }\n\n    async function mint () { \n        if (!signedIn || !contractWithSigner){\n            setErrorMessage(\"Please connect wallet or reload the page!\")\n            toggleModal(true);\n            return\n        }\n\n        if( paused ){\n            setErrorMessage(\"Sale is not active right now.  Try again later!\")\n            toggleModal(true);\n            return;\n        }\n\n        if( !(await ethereumSession.connectAccounts( true )) ){\n            setErrorMessage(\"Please unlock your wallet and select an account.\")\n            toggleModal(true);\n            return;\n        }\n\n        if( !(await ethereumSession.connectChain( true )) ){\n            setErrorMessage(`Please open your wallet and select ${ethereumSession.chain.name}.`);\n            toggleModal(true);\n            return;\n        }\n\n        if ( ethereumSession.chain.hex !== await ethereumSession.getWalletChainID() ){\n            window.location.reload();\n            return;\n        }\n\n        //connected\n        try{\n            const price = String(tokenPrice * howManyTokens)\n\n            const overrides = {\n                from: walletAddress,\n                value: price\n            }\n\n            const gasBN = await ethereumSession.contract.estimateGas.mint(walletAddress, howManyTokens, overrides);\n            const finalGasBN = gasBN.mul( ethers.BigNumber.from(11) ).div( ethers.BigNumber.from(10) );\n            overrides.gasLimit = finalGasBN.toString();\n\n            const txn = await contractWithSigner.mint(walletAddress, howManyTokens, overrides)\n            await txn.wait();\n            setMintingSuccess(howManyTokens)\n        } catch (error) {\n            if (error.error) {\n                setMintingError(error.error.message)\n            } \n        }\n    }\n\n    const setMintingSuccess = (howManyTokens) => {\n        setErrorMessage(\"Congrats on minting \" + howManyTokens + \"  BitBots!!\");\n        toggleModal(true);\n    }\n\n    const setMintingError = (error) => {\n        setErrorMessage(error);\n        toggleModal(true);\n    }\n\n    const mintOne = () => { \n        setErrorMessage(\"Must mint atleast one BitBot!\")\n        toggleModal(true);\n    }\n\n    function checkHowMany (newNumber) { \n        if (newNumber > 1000) {\n            setHowManyTokens(1000)\n        } else if (newNumber < 1) { \n            setHowManyTokens(\"\")\n        } else { \n            setHowManyTokens(newNumber) \n        }\n    }\n\n    const oneText = howManyTokens < 2 && howManyTokens > 0 ? \"MINT \" + howManyTokens + \" BITBOT!\" : \"MINT \" + howManyTokens + \" BITBOTS!\"\n    const zeroText = howManyTokens < 1 ? \"MUST MINT ATLEAST 1 BITBOT\" : oneText\n\n    const paraText = signedIn ? \"INPUT NUMBER OF BITBOTS TO MINT (0.015 ETH): \" : \"CONNECT WALLET ABOVE TO MINT BITBOTS!\"\n    const buttonText = signedIn ? zeroText : \"CONNECT WALLET TO MINT\"\n\n    return (\n        <div id=\"#home\">\n            <div className=\"minthomeBg\" />\n            <div className=\"minthome__container\">\n                <div className=\"minthome__info\">\n                    <h1>MINT A BITBOT!</h1>\n                    <div className=\"minthome__signIn\"> \n                        {!signedIn ? <button onClick={signIn}>CONNECT WALLET</button>\n                            : <button onClick={signOut}>WALLET CONNECTED<br /> CLICK TO SIGN OUT</button>\n                        }\n                    </div>\n                    \n                    <p>BITBOTS MINTED: {totalSupply} / 9,999</p>\n                    <p>{paraText}</p>\n                    \n                    <div className={signedIn ? \"minthome__signIn-input\" : \"minthome__signIn-input-false\"}>\n                        <input \n                            type=\"number\" \n                            min=\"1\"\n                            max=\"1000\"\n                            value={howManyTokens}\n                            onChange={ e => checkHowMany(e.target.value) }\n                            name=\"\" \n                        />\n                    </div>\n                    \n                    <br/>\n                    \n                    <div className={signedIn && howManyTokens > 0 ? \"minthome__mint\" : \"minthome__mint-false\"}>\n                        {howManyTokens > 0 ? <button onClick={() => mint()}>{buttonText}</button>\n                            : <button>{buttonText}</button>\n                        }\n                    </div>\n                </div>\n            </div>\n\n            <Modal\n                shown={modalShown}\n                close={() => {\n                    toggleModal(false);\n                }}\n                message={errorMessage}\n            ></Modal>\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/welcomeGif.e2674867.gif\";","import React from 'react';\nimport \"./Welcome.css\";\nimport welcomeGif from '../images/welcomeGif.gif';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDiscord, faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport { Link } from \"react-router-dom\";\n\nexport default function Welcome () {\n    return (\n        <div className=\"welcome\" id=\"Welcome\">\n            <div className=\"welcome__container\">\n                <h1>Welcome to BitBot Society</h1> \n                <p>BitBot Society is a collection of 9,999 Robot NFTs living on the Ethereum blockchain who are able to beepboop into the Metaverse. Each BitBot NFT is uniquely generated from a pool of 152+ different traits!</p>\n                <button className=\"welcome__button\"><a href=\"https://opensea.io/collection/bit-bot-society\" target=\"_blank\" rel=\"noreferrer\" className=\"welcome__link\">BitBot Opensea</a></button>\n                <div className=\"welcome-linksWrapper\">\n                    <Link className=\"welcome-links\" to={{ pathname: \"https://twitter.com/BitBotSociety\" }} target=\"_blank\" rel=\"noreferrer\">\n                        <FontAwesomeIcon icon={faTwitter} />\n                    </Link>\n                    <Link className=\"welcome-links\" to={{ pathname: \"https://discord.com/invite/kG24rk4cMD\" }} target=\"_blank\" rel=\"noreferrer\">\n                        <FontAwesomeIcon icon={faDiscord} />\n                    </Link>\n                </div>\n            </div>\n            <div className=\"welcome__imgContainer\">\n                <img src={welcomeGif} alt=\"Giraffe Gif\"/>\n            </div>\n        </div>\n    \n    );\n}\n","export default __webpack_public_path__ + \"static/media/bitbotRap.fb5944b4.mp4\";","export default __webpack_public_path__ + \"static/media/8.53dbd94a.png\";","import React from 'react';\nimport \"./About.css\";\nimport rap from '../images/bitbotRap.mp4'\nimport pattern from '../images/star2.jpeg';\nimport pic from '../images/8.png'\n\nexport default function About () {\n    return (\n        <div className=\"about\" id=\"project\" style={{ backgroundImage: `url(${pattern})` }}>\n            <div className=\"about__wrapperVid\" dangerouslySetInnerHTML={{\n                __html: `<video className=\"app__backgroundVideo\" autoplay muted loop playsinline controls>\n                            <source src=${rap} type=\"video/mp4\" />\n                            Your browser does not support the video tag.\n                        </video>`,\n                }}\n            />\n            \n            <div className=\"about__container\"  >\n                <h1>What is the Benefit of Purchasing a BitBot?!</h1> \n                <h2>Four Tiers of Ownership:</h2>\n                <p><span>Tier 1 - Owning 1 BitBot:</span> Grants you a royalty-free license to use, copy, display, & modify the BitBot NFT you own. See terms & conditions for details.</p>\n                <p><span>Tier 2 - Owning 5 BitBots: </span>Tier 1 + Grants you exclusive access pass to mint all future official BBS derivative projects including BitBot Society 3D assets. Supply no more than 2,100 qty.</p>\n                <p><span>Tier 3 - Owning 10 BitBots:</span> Tiers 1 & 2 + Grants you exclusive access pass to mint all future official BBS derivative projects including BitBot Society 3D assets. Supply no more than 1,100 qty. Eligible for major official BitBot Society giveaways/raffles after mint is complete (Terms & Conditions apply).</p>\n                <p><span>Tier 4 - Owning 25 BitBots:</span> Tiers 1, 2, & 3 + Grants you exclusive access pass to mint all future official BBS derivative projects including BitBot Society 3D assets. Supply no more than 500 qty. Eligible for major official BitBot Society giveaways/raffles after mint is complete (Terms & Conditions apply)</p>\n                <li>BBS holders #1-300 will have exclusive access to mint official BBS 3D Spacetruck after the original mint is complete.</li>\n                <li>BBS holders #301-1,000 will have exclusive access to mint official BBS 3D Skateboard after the original mint is complete.</li>\n            </div>\n            <div className=\"about__wrapperImg\">\n                <img src={pic} alt=\"BitBot\" />\n            </div>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/roadmap.eb0d4478.jpeg\";","import React from 'react';\nimport \"./Display.css\";\nimport roadmap from '../images/roadmap.jpeg'\n\nexport default function Display () {\n    return (\n        <div className=\"display\" id=\"roadmap\">\n            <h1>Community Roadmap Activations</h1>\n            <p className='display__topText'>We care about longevity which is why our long term goal is to lift EVERYONE up through owning a BitBot. We are building massive utility with Music, 3D assets, and the Metaverse. Join us on our journey as we BeepBoop into Web3 and beyond!</p>\n            <div className='display__container'>\n                <div className='display__text'>\n                    <p>Once we hit a target percentage of our entire collection, we will begin working on these goals:</p>\n                    <div className='display__list'>\n                        <h3 className='percentage'>5%&nbsp;&nbsp;</h3>\n                        <li>\n                            <span className='strike'>Airdrop Lee Major’s Music NFT to first 100 wallet holders.</span>\n                        </li>\n                    </div>\n                    <div className='display__list'><h3 className='percentage'>10%&nbsp;</h3><li><span className='strike'>Paid for Rarity Sniper; Create BitBot Society LLC; added team members & resources.</span></li></div>\n                    <div className='display__list'><h3 className='percentage'>15%&nbsp;</h3>\t    <li><span className='strike'>Entered the Metaverse; Purchased a Metaplot in Polka City.</span></li></div>\n                    <div className='display__list'><h3 className='percentage'>25%&nbsp;</h3>\t    <li>Community Activity & Leader Award (ETH Giveaway for Both) announced in Discord; Launch weekly podcast; Begin launch of Mixtape Vol. 1. Mint price will double from .015 to .03</li></div>\n                    <div className='display__list'><h3 className='percentage'>50%&nbsp;</h3>\t    <li>Community Activity & Leader Award (ETH Giveaway for Both) announced in Discord; Start ‘BitBotSociety.com’ build; Explore official BBS derivative projects.</li></div>\n                    <div className='display__list'><h3 className='percentage'>75%&nbsp;</h3>\t    <li>Community Activity & Leader Award (ETH Giveaway for Both) announced in Discord; Exclusive LIMITED EDITION Merch Store gets unlocked for BBS holders ONLY, featuring tees, hoodies and other surprises.</li></div>\n                    <div className='display__list'><h3 className='percentage'>100%</h3>\t    <li>Celebrate with our community! Giveaway/Raffles; Community Activity & Leader Award (ETH Giveaway for Both) announced in Discord; Tell BBS evolution story; Explore cartoon/comic book series; Release Merch sales to the public; Begin launch all official derivative Projects; Most importantly #BeepBoop</li></div>\n                </div>\n                <div className='display__image'>\n                    <img src={roadmap} alt=\"bitbot\" />\n                </div>\n            </div>\n            <li>Every milestone we achieve, we will host a community concert/party (Details TBA).</li>\n            <li>There will be plenty of surprises along the way #BeepBoop :) </li>\n        </div>\n    );\n}","export default __webpack_public_path__ + \"static/media/1.3333a861.png\";","export default __webpack_public_path__ + \"static/media/2.03417b91.png\";","export default __webpack_public_path__ + \"static/media/3.f8488ba6.png\";","export default __webpack_public_path__ + \"static/media/4.525d6108.png\";","export default __webpack_public_path__ + \"static/media/5.51ab6fad.png\";","export default __webpack_public_path__ + \"static/media/6.d68641f9.png\";","export default __webpack_public_path__ + \"static/media/7.d48f5972.png\";","export default __webpack_public_path__ + \"static/media/8.f05c36e3.png\";","export default __webpack_public_path__ + \"static/media/9.93aa2fb6.png\";","export default __webpack_public_path__ + \"static/media/10.6c44f82a.png\";","export default __webpack_public_path__ + \"static/media/11.4995c1c4.png\";","export default __webpack_public_path__ + \"static/media/12.07332b12.png\";","export default __webpack_public_path__ + \"static/media/13.74a346bf.png\";","export default __webpack_public_path__ + \"static/media/14.49a94967.png\";","export default __webpack_public_path__ + \"static/media/15.cb8fb511.png\";","export default __webpack_public_path__ + \"static/media/16.e21e2c94.png\";","import React from 'react';\nimport \"./Team.css\";\nimport a from '../images/teamImages/1.png';\nimport b from '../images/teamImages/2.png';\nimport c from '../images/teamImages/3.png';\nimport d from '../images/teamImages/4.png';\nimport e from '../images/teamImages/5.png';\nimport f from '../images/teamImages/6.png';\nimport g from '../images/teamImages/7.png';\nimport h from '../images/teamImages/8.png';\nimport i from '../images/teamImages/9.png';\nimport j from '../images/teamImages/10.png';\nimport k from '../images/teamImages/11.png';\nimport l from '../images/teamImages/12.png';\nimport m from '../images/teamImages/13.png';\nimport n from '../images/teamImages/14.png';\nimport o from '../images/teamImages/15.png';\nimport p from '../images/teamImages/16.png';\n\nexport default function Team () {\n    return (\n        <div className=\"team\" id=\"team\">\n            <div className=\"team__container\">\n                <div className='team__text'>\n                    <h1>THE TEAM</h1>\n                    <p>BitBot Society was created to be an example of whats possible when a dedicated team works together for a common cause. What started out as a few strangers hanging out in Twitter Spaces has grown into an amazing Community support team focused on providing massive value and utility to all BitBot NFT holders.</p>\n                    <h3>PR/Support</h3>\n                    <p><a href=\"https://twitter.com/AckerlandJay\" target=\"_blank\" rel=\"noopener noreferrer\">JAY</a>; <a href=\"https://twitter.com/WesleyETH\" target=\"_blank\" rel=\"noopener noreferrer\">WES</a></p>\n                    <h3>Support Bots</h3>\n                    <p><a href=\"https://twitter.com/TripVoxel\" target=\"_blank\" rel=\"noopener noreferrer\">TRIP</a>; <a href=\"https://twitter.com/Violetskysart\" target=\"_blank\" rel=\"noopener noreferrer\">VIOLET</a>; <a href=\"https://twitter.com/broadwayallday\" target=\"_blank\" rel=\"noopener noreferrer\">BROADWAY</a>; <a href=\"https://twitter.com/cartoons_mad\" target=\"_blank\" rel=\"noopener noreferrer\">EMILY</a>; <a href=\"https://twitter.com/dezknoph\" target=\"_blank\" rel=\"noopener noreferrer\">DEZ</a>;<br /> <a href=\"https://twitter.com/VinnyETH_\" target=\"_blank\" rel=\"noopener noreferrer\">VINNY</a>; <a href=\"https://twitter.com/LeeMajorKid\" target=\"_blank\" rel=\"noopener noreferrer\">LEE</a>; <a href=\"https://twitter.com/SLACTHEDON\" target=\"_blank\" rel=\"noopener noreferrer\">SLAC</a>; <a href=\"https://twitter.com/DigitalAnalog00\" target=\"_blank\" rel=\"noopener noreferrer\">CHRIS</a>; <a href=\"https://twitter.com/Nitric__\" target=\"_blank\" rel=\"noopener noreferrer\">NICK</a>; <a href=\"https://twitter.com/Funee_Munee\" target=\"_blank\" rel=\"noopener noreferrer\">STEVE</a>; <a href=\"https://twitter.com/badkarma617\" target=\"_blank\" rel=\"noopener noreferrer\">BRUCE</a></p>\n                </div>\n                <div className='team__images'>\n                    <img src={a} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={b} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={c} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={d} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={e} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={f} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={g} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={h} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={i} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={j} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={k} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={l} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={m} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={n} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={o} alt=\"BitBot\" className='team__imgIndividual' />\n                    <img src={p} alt=\"BitBot\" className='team__imgIndividual' />\n                </div>\n            </div>\n            <h4>VERIFIED SMART CONTRACT ADDRESS: <a href='https://etherscan.io/address/0x68cf439ba5d2897524091ef81cb0a3d1f56e5500' target=\"_blank\" rel=\"noopener noreferrer\">0x68cf439BA5D2897524091Ef81Cb0A3D1F56E5500</a></h4>\n        </div>\n    \n    );\n}\n","import React from 'react';\nimport Navbar from '../components/Navbar'\nimport MintHome from '../components/MintHome';\nimport Welcome from '../components/Welcome'\nimport About from '../components/About'\nimport Display from '../components/Display'\nimport Team from '../components/Team'\n\nconst Home = () => {\n    return (\n        <>  \n            <Navbar />\n            <MintHome />\n            <Welcome />\n            <About />\n            <Display />\n            <Team />\n        </>\n    );\n}\n\nexport default Home;","import React, { Component } from 'react'; \nimport { HashLink } from \"react-router-hash-link\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDiscord, faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport { faTimes, faBars } from '@fortawesome/free-solid-svg-icons'\nimport logo from '../images/logo.png'\n\nimport \"./Navbar.css\";\n\nexport default class NavbarTerms extends Component { \n  state = {\n    isOpen: false\n  };\n\n  handleToggle = () => { \n    this.setState({ isOpen: !this.state.isOpen })\n  };\n\n  render () {\n    return (\n      <nav className={this.state.isOpen ? \"navbar active\" : \"navbar\"} id=\"#fullhome\">\n        <div className=\"nav-container\">\n          <Link to=\"/\" className=\"nav-logo\">\n            <img className=\"nav__imgLogo\" src={logo} alt=\"GATB Logo\"/>\n          </Link>\n\n          <ul className={this.state.isOpen ? \"nav-menu active\" : \"nav-menu\"}>\n            <li className=\"nav-item\">\n              <Link\n                to=\"/\"\n                className=\"nav-links\"\n              >\n                HOME\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <a href=\"https://raritysniper.com/bit-bot-society\" rel=\"noopener noreferrer\" target=\"_blank\" className=\"nav-links\">\n                RARITY\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-links\" to={{ pathname: \"https://twitter.com/BitBotSociety\" }} target=\"_blank\" >\n                <FontAwesomeIcon icon={faTwitter} />\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-links\" to={{ pathname: \"https://discord.com/invite/kG24rk4cMD\" }} target=\"_blank\" >\n                <FontAwesomeIcon icon={faDiscord} />\n              </Link>\n            </li>\n          </ul>\n          <div className=\"nav-icon\" onClick={this.handleToggle}>\n            {this.state.isOpen ? <FontAwesomeIcon icon={faTimes} />\n              : <FontAwesomeIcon icon={faBars} />\n            }\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}","import React from 'react';\nimport './Terms.css'\n\nconst Terms = () => {\n    return (\n        <div className='terms'>\n            <div className='terms__container'>\n                <h1>Terms & Conditions</h1>\n                <p className='update'>Last Updated: February 12, 2022</p>\n                <p className='term__text'>BitBot Society is a collection of digital artworks (NFTs) running on the Ethereum network, This website is only an interface entirely responsible for the safety and management of their own private Ethereum wallets and validating all the transactions and contracts generated by this website before approval. Furthermore, as BitBot Society smart contract runs on the Ethernet network, there is no ability to undo, reverse, or restore any transactions. This website and its connected services are provided “ as is” and “as available” without warranty of any kind. By using this website you are accepting sole responsibility for any and all transactions involving BitBot Society digital collectibles.</p>\n                <h3>These Terms & Conditions are subject to change.</h3>\n                <p>These Terms may be discretionarily modified or replaced at any time, unless stated otherwise herein. The most current version of this Agreement will be posted on the Website with the “Last Revised” date at the top of the Agreement changed. Any changes or modifications will be effective immediately upon posting the revisions to the Site. You shall be responsible for reviewing and becoming familiar with any such modifications. You waive any right you may have to receive specific notice of such changes or modifications. Use of the Platform by you after any modification to the Agreement constitutes your acceptance of the Agreement as modified. If you do not agree to the Agreement in effect when you access or use the Platform, we may, at any time and without liability or prior notice, modify or discontinue all or part of the Platform (including access to the Platform via any third-party links).</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Terms","import React from 'react';\nimport Navbar from '../components/NavbarTerms';\nimport Terms from '../components/Terms';\n\nconst TermsAndConditions = () => {\n    return (\n        <>  \n            <Navbar />\n            <Terms />\n        </>\n    );\n}\n\nexport default TermsAndConditions;","import React from 'react';\nimport './Owners.css'\n\nconst Owners = () => {\n    return (\n        <div className='owners'>\n            <div className='owners__container'>\n                <h1>Ownership (IP Rights)</h1>\n                <h1>BitBot Society NFT Ownership</h1>\n                <h3>1. Ownership:</h3>\n                <p>You own your purchased BitBot Society NFT. BitBot Society NFTs are minted on the Ethereum Blockchain. When you purchase that NFT you own the underlying Elements Traits and Final Composition of the art. Since BitBot Society NFTs collection contains multiple use of traits, all trait art assets are shared amongst all BitBot Society NFT Owners.</p>\n                <p>All NFTs ownership is verified cryptographically on the Ethereum Blockchain. This is proof of ownership and grants rights within this document. Once the NFT leaves ownership, all Personal and Commercial use terms are revoked.</p>\n                <h3>2. Personal Use: Subject to compliance with these terms.</h3>\n                <p>BitBot Society LLC grants you a royalty-free license to use, copy, display, and modify your owned BitBot NFT Art. This usage is granted world-wide. This is for the purposes of:</p>\n                <ul>\n                    <li>- Personal and Non-Commercial Use</li>\n                    <li>- Display and use your NFT on the External Websites</li>\n                    <li>- Ability to Buy, Sell, and Trade your NFT</li>\n                    <li>- Deconstruct for usage of displaying Trait Asset Art</li>\n                </ul>\n                <h3>3. Commercial Use: Subject to compliance with these terms.</h3>\n                <p>BitBot Society LLC grants unlimited use, copy, and display of your owned BitBot Society NFT Art. This is for the purpose of creative derivative works based on the owned NFT. This is for the purposes of:</p>\n                <ul>\n                    <li>- Produce and Sell Merchandise (Apparel, Printed Art, Stickers)</li>\n                    <li>- Usage in Print (Comics, Graphic Novels, Posters)</li>\n                    <li>- Production of Music or any other forms of entertainment</li>\n                </ul>\n                <h3>4. Excluded Use:</h3>\n                <p>These terms exclude you from the following usage:</p>\n                <ul>\n                    <li>- Duplicating and Reselling your BitBot Society NFT as a Newly Minted NFTs without 75% or more modifications to the original art.</li>\n                    <li>- Using your BitBot Society Traits as elements on Newly Minted NFTs without 75% or more modifications to the original art.</li>\n                    <li>- Commercial use limited to $100,000 in value/revenue without official Bitbot Society partnership/prior approval.</li>\n                </ul>\n                <h3>5. Definitions</h3>\n                <p>The following capitalized terms will have the following meanings:</p>\n                <ul>\n                    <li>- “Art” means any art, design, and drawings that may be associated with a BitBot Society NFT that you Own.</li>\n                    <li>- “Own” means, with respect to a BitBot, a BitBot Society that you have purchased or otherwise rightfully acquired from a legitimate source, where proof of such purchase is recorded on the relevant blockchain.</li>\n                    <li>- “Purchased BitBot Society” means a BitBot that you Own.</li>\n                    <li>- \"Trait Asset\" means the Art associated with each graphic trait. This includes Accessory, Body, Ears, Eyes, Heads, Headwear, Mouths, Background Image</li>\n                </ul>\n\n                <h4>BitBot Society LLC retains the ownership of the Name and Logo. As well as rights to use, modify, and distribute all minted NFTs for use for marketing and promotional purposes. BitBot Society LLC retains ownership and rights to distribute, copy, and modify BitBots Trait Asset Art, commercially and as NFTs.</h4>\n                <h3>These Terms & Conditions are subject to change.</h3>\n                <p>These Terms may be discretionarily modified or replaced at any time, unless stated otherwise herein. The most current version of this Agreement will be posted on the Website with the “Last Revised” date at the top of the Agreement changed. Any changes or modifications will be effective immediately upon posting the revisions to the Site. You shall be responsible for reviewing and becoming familiar with any such modifications. You waive any right you may have to receive specific notice of such changes or modifications. Use of the Platform by you after any modification to the Agreement constitutes your acceptance of the Agreement as modified. If you do not agree to the Agreement in effect when you access or use the Platform, we may, at any time and without liability or prior notice, modify or discontinue all or part of the Platform (including access to the Platform via any third-party links).</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Owners","import React from 'react';\nimport Navbar from '../components/NavbarTerms';\nimport Owners from '../components/Owners';\n\nconst Ownership = () => {\n    return (\n        <>  \n            <Navbar />\n            <Owners />\n        </>\n    );\n}\n\nexport default Ownership;","export default __webpack_public_path__ + \"static/media/footerImage.d5a46a40.mp4\";","import React from 'react'; \nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDiscord, faTwitter } from '@fortawesome/free-brands-svg-icons'\nimport footerVid from '../images/footerImage.mp4'\n\nimport \"./Footer.css\";\n\nexport default function Footer () {\n  return (\n    <div className=\"footer\"> \n      <div className='footer__container'>\n        <div className='footer__first'>\n\n        </div>\n        <div className='footer__second'>\n          <video loop autoPlay muted>\n            <source src={footerVid} type=\"video/mp4\" />\n          </video>\n        </div>\n        <div className='footer__third'>\n          <div className='footer__links'>\n            <a href='https://twitter.com/BitBotSociety' target=\"_blank\" rel=\"noopener noreferrer\" ><FontAwesomeIcon icon={faTwitter} /></a>\n            <a href='https://discord.com/invite/kG24rk4cMD' target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faDiscord} /></a>\n          </div>\n          <br />\n          <p>2022 BitBot Society LLC</p>\n          <Link\n            to=\"terms-and-conditions\"\n            className=\"nav-links\"\n          >\n            Terms & Conditions\n          </Link>\n          <Link\n            smooth \n            to=\"ownership\"\n            className=\"nav-links\"\n          >\n            Ownership\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './pages/Home';\nimport TermsAndConditions from './pages/TermsAndConditions'\nimport Ownership from './pages/Ownership'\nimport Footer from './components/Footer'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/terms-and-conditions' component={TermsAndConditions} />\n          <Route path='/ownership' component={Ownership} />\n        </Switch>\n        <Footer />\n      </Router> \n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { Web3ReactProvider } from '@web3-react/core'\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nfunction getLibrary(provider){\n  const library = new Web3Provider(provider)\n  library.pollingInterval = 12000\n  return library\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <App />\n    </Web3ReactProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}